{% comment %}
  Renders cart drawer

  Usage:
  {% render 'cart-drawer' %}
{% endcomment %}

{{ 'quantity-popover.css' | asset_url | stylesheet_tag }}
{{ 'cart-section.css' | asset_url | stylesheet_tag }}

<script src="{{ 'cart.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'quantity-popover.js' | asset_url }}" defer="defer"></script>

<style>
  .drawer {
    visibility: hidden;
  }
</style>

<section id="CartDrawerSection">
  <cart-drawer id="CartDrawerContainer" class="drawer{% if cart == empty %} is-empty{% endif %}">
    <div id="CartDrawer" class="cart-drawer">
      <div id="CartDrawer-Overlay" class="cart-drawer__overlay"></div>
      <div
        class="drawer__inner"
        role="dialog"
        aria-modal="true"
        aria-label="{{ 'sections.cart.title' | t }}"
        tabindex="-1"
      >
        {%- if cart == empty -%}
          <div class="drawer__inner-empty">
            <div class="cart-drawer__warnings center{% if settings.cart_drawer_collection != blank %} cart-drawer__warnings--has-collection{% endif %}">
              <div class="cart-drawer__empty-content">
                <h2 class="cart__empty-text">{{ 'sections.cart.empty' | t }}</h2>
                <button
                  class="drawer__close"
                  type="button"
                  onclick="this.closest('cart-drawer').close()"
                  aria-label="{{ 'accessibility.close' | t }}"
                >
                  {% render 'icon-close' %}
                </button>
                <div class="empty-bag d-flex flex-column align-items-center">
                  <a href="/collections/all" class="btn-orange" style="margin-top: 20px;">GO TO SHOPPING</a>
                </div>
              </div>
            </div>
            {%- if settings.cart_drawer_collection != blank -%}
              <div class="cart-drawer__collection">
                {% render 'card-collection', card_collection: settings.cart_drawer_collection, columns: 1 %}
              </div>
            {%- endif -%}
          </div>

        {%- else -%}
          <div class="drawer__header">
            <h2 class="drawer__heading">{{ 'sections.cart.title' | t }}</h2>
            <button
              class="drawer__close"
              type="button"
              onclick="this.closest('cart-drawer').close()"
              aria-label="{{ 'accessibility.close' | t }}"
            >
              {% render 'icon-close' %}
            </button>
          </div>
          <cart-drawer-items
            {% if cart == empty %}
              class=" is-empty"
            {% endif %}
          >
            <form
              action="{{ routes.cart_url }}"
              id="CartDrawer-Form"
              class="cart__contents cart-drawer__form"
              method="post"
            >
              <div id="CartDrawer-CartItems" class="drawer__contents js-contents">
                {%- if cart != empty -%}
                  <div class="drawer__cart-items-wrapper" id="cart-items" data-id="{{ section.id }}">
                    <div id="cart-items-list">
                      {%- for item in cart.items -%}
                        <div class="cart-item-row">
                          <div>
                            {%- if item.image != blank -%}
                              <img
                                src="{{ item.image | image_url: width: 300 }}"
                                class="cart-item__image"
                                alt="{{ item.image.alt | escape }}"
                                loading="lazy"
                                width="150"
                                height="{{ 150 | divided_by: item.image.aspect_ratio | ceil }}"
                              >
                            {%- endif -%}
                            <div class="detail-wrapper">
                              <div>
                                <a href="{{ item.product.url }}" style="color: black;">{{ item.product.title }}</a>
                              </div>
                              {%- if item.product.has_only_default_variant == false -%}
                                <dl>
                                  {%- for option in item.options_with_values -%}
                                    <div class="product-option">
                                      <dt>{{ option.name }}:</dt>
                                      <dd>{{ option.value }}</dd>
                                    </div>
                                  {%- endfor -%}
                                </dl>
                              {%- endif -%}

                              {% comment %}
                                {%- for property in item.properties -%}
                                  {%- assign property_first_char = property.first | slice: 0 -%}
                                  {%- if property.last != blank -%}
                                    {{ property.first }} :
                                    <input
                                      data-key="{{ item.index | plus: 1 }}"
                                      type="text"
                                      name="{{ property.first }}"
                                      value="{{ property.last }}"
                                      class="property-input"
                                    >
                                  {%- endif -%}
                                {%- endfor -%}
                              {% endcomment %}
                            </div>
                          </div>

                          <div class="d-flex align-items-center">
                            <div>{{ item.final_price | money }}</div>
                            <div class="d-flex align-items-center">
                              {% comment %}
                                <custom-quantity-input
                                  class="custom-quanty"
                                  data-url="{{ product.url }}"
                                  data-section="{{ section.id }}"
                                >
                                  <div class="quantity">
                                    <button
                                      class="quantity__button no-js-hidden"
                                      name="minus"
                                      data-key="{{ item.index | plus: 1 }}"
                                      id="decrease-quantity"
                                      data-id="{{ item.id }}"
                                      type="button"
                                      data-step="{{ item.variant.quantity_rule.increment }}"
                                    >
                                      <span class="visually-hidden">
                                        {{- 'products.product.quantity.decrease' | t: product: product.title | escape -}}
                                      </span>
                                      {% render 'icon-minus' %}
                                    </button>
                                    <input
                                      class="quantity__input"
                                      data-cart-quantity="{{ cart_qty }}"
                                      type="number"
                                      name="quantity"
                                      id="Quantity-{{ section.id }}"
                                      data-min="{{ item.variant.quantity_rule.min }}"
                                      min="{{ item.variant.quantity_rule.min }}"
                                      {% if item.variant.quantity_rule.max != null %}
                                        data-max="{{ item.variant.quantity_rule.max }}"
                                        max="{{ item.variant.quantity_rule.max }}"
                                      {% endif %}
                                      step="{{ item.variant.quantity_rule.increment }}"
                                      value="{{ item.quantity }}"
                                      data-key="{{ item.index | plus: 1 }}"
                                    >
                                    <button
                                      class="quantity__button no-js-hidden"
                                      name="plus"
                                      data-key="{{ item.index | plus: 1 }}"
                                      id="increase-quantity"
                                      data-id="{{ item.id }}"
                                      type="button"
                                      data-step="{{ item.variant.quantity_rule.increment }}"
                                    >
                                      <span class="visually-hidden">
                                        {{- 'products.product.quantity.increase' | t: product: product.title | escape -}}
                                      </span>
                                      {% render 'icon-plus' %}
                                    </button>
                                  </div>

                                  <p id="quantity-error" class="font-body-bold text-danger"></p>
                                </custom-quantity-input>
                              {% endcomment %}
                              <div class="quanitity-wrapper quanitity-drawer-wrapper">
                                <button
                                  data-key="{{ item.index | plus: 1 }}"
                                  name="minus"
                                  id="decrease-quantity"
                                  class="quantity__button"
                                  data-id="{{ item.id }}"
                                >
                                  -
                                </button>
                                <input
                                  step="{{ item.variant.quantity_rule.increment }}"
                                  type="number"
                                  value="{{ item.quantity }}"
                                  min="{{ item.variant.quantity_rule.min }}"
                                  {% if item.variant.quantity_rule.max != null %}
                                    max="{{ item.variant.quantity_rule.max }}"
                                  {% endif %}
                                  class="quantity__input"
                                  name="quantity"
                                  data-key="{{ item.index | plus: 1 }}"
                                >
                                <button
                                  data-key="{{ item.index | plus: 1 }}"
                                  name="plus"
                                  class="quantity__button"
                                  id="increase-quantity"
                                  data-id="{{ item.id }}"
                                >
                                  +
                                </button>
                              </div>
                              <button
                                style="margin-left: 15px; border:none;"
                                class="delete-item"
                                data-key="{{ item.index | plus: 1 }}"
                              >
                                <span>
                                  <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    viewBox="0 0 16 16"
                                    aria-hidden="true"
                                    focusable="false"
                                    class="icon icon-remove"
                                  >
                                    <path d="M14 3h-3.53a3.07 3.07 0 00-.6-1.65C9.44.82 8.8.5 8 .5s-1.44.32-1.87.85A3.06 3.06 0 005.53 3H2a.5.5 0 000 1h1.25v10c0 .28.22.5.5.5h8.5a.5.5 0 00.5-.5V4H14a.5.5 0 000-1zM6.91 1.98c.23-.29.58-.48 1.09-.48s.85.19 1.09.48c.2.24.3.6.36 1.02h-2.9c.05-.42.17-.78.36-1.02zm4.84 11.52h-7.5V4h7.5v9.5z" fill="currentColor"></path>
                                    <path d="M6.55 5.25a.5.5 0 00-.5.5v6a.5.5 0 001 0v-6a.5.5 0 00-.5-.5zM9.45 5.25a.5.5 0 00-.5.5v6a.5.5 0 001 0v-6a.5.5 0 00-.5-.5z" fill="currentColor"></path>
                                  </svg>
                                </span>
                              </button>
                            </div>
                            <div class="loader" data-key="{{ item.index | plus: 1 }}"></div>
                            <span class="total-price">
                              {{ item.original_line_price | money }}
                            </span>
                          </div>
                        </div>
                      {%- endfor -%}
                    </div>
                  </div>
                {%- endif -%}
                <p id="CartDrawer-LiveRegionText" class="visually-hidden" role="status"></p>
                <p id="CartDrawer-LineItemStatus" class="visually-hidden" aria-hidden="true" role="status">
                  {{ 'accessibility.loading' | t }}
                </p>
              </div>
              <div id="CartDrawer-CartErrors" role="alert"></div>
            </form>
          </cart-drawer-items>

          <div class="drawer__footer">
            {%- if settings.show_cart_note -%}
              <details id="Details-CartDrawer">
                <summary>
                  <span class="summary__title">
                    {{ 'sections.cart.note' | t }}
                    {% render 'icon-caret' %}
                  </span>
                </summary>
                <cart-note class="cart__note field">
                  <label class="visually-hidden" for="CartDrawer-Note">{{ 'sections.cart.note' | t }}</label>
                  <textarea
                    id="CartDrawer-Note"
                    class="text-area text-area--resize-vertical field__input"
                    name="note"
                    placeholder="{{ 'sections.cart.note' | t }}"
                  >{{ cart.note }}</textarea>
                </cart-note>
              </details>
            {%- endif -%}

            <!-- Start blocks -->
            <!-- Subtotals -->

            <div class="cart-drawer__footer" {{ block.shopify_attributes }}>
              <div>
                {%- if cart.cart_level_discount_applications.size > 0 -%}
                  <ul class="discounts list-unstyled" role="list" aria-label="{{ 'customer.order.discount' | t }}">
                    {%- for discount in cart.cart_level_discount_applications -%}
                      <li class="discounts__discount discounts__discount--end">
                        {%- render 'icon-discount' -%}
                        {{ discount.title }}
                        (-{{ discount.total_allocated_amount | money }})
                      </li>
                    {%- endfor -%}
                  </ul>
                {%- endif -%}
              </div>

              <div id="footer_total_price_wrapper">
                <div class="totals" id="footer_total_price" role="status">
                  <h2 class="totals__total">{{ 'sections.cart.estimated_total' | t }}</h2>
                  <p class="totals__total-value">{{ cart.total_price | money_with_currency }}</p>
                </div>
              </div>
              <small class="tax-note caption-large rte">
                {%- if cart.taxes_included and shop.shipping_policy.body != blank -%}
                  {{ 'sections.cart.taxes_included_and_shipping_policy_html' | t: link: shop.shipping_policy.url }}
                {%- elsif cart.taxes_included -%}
                  {{ 'sections.cart.taxes_included_but_shipping_at_checkout' | t }}
                {%- elsif shop.shipping_policy.body != blank -%}
                  {{ 'sections.cart.taxes_and_shipping_policy_at_checkout_html' | t: link: shop.shipping_policy.url }}
                {%- else -%}
                  {{ 'sections.cart.taxes_and_shipping_at_checkout' | t }}
                {%- endif -%}
              </small>
            </div>

            <!-- CTAs -->

            <div class="cart__ctas" {{ block.shopify_attributes }}>
              <noscript>
                <button type="submit" class="cart__update-button button button--secondary" form="CartDrawer-Form">
                  {{ 'sections.cart.update' | t }}
                </button>
              </noscript>

              <button
                type="submit"
                id="CartDrawer-Checkout"
                class="cart__checkout-button button"
                name="checkout"
                form="CartDrawer-Form"
                {% if cart == empty %}
                  disabled
                {% endif %}
              >
                {{ 'sections.cart.checkout' | t }}
              </button>
            </div>
          </div>
        {%- endif -%}
      </div>
    </div>
  </cart-drawer>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    function isIE() {
      const ua = window.navigator.userAgent;
      const msie = ua.indexOf('MSIE ');
      const trident = ua.indexOf('Trident/');

      return msie > 0 || trident > 0;
    }

    if (!isIE()) return;
    const cartSubmitInput = document.createElement('input');
    cartSubmitInput.setAttribute('name', 'checkout');
    cartSubmitInput.setAttribute('type', 'hidden');
    document.querySelector('#cart').appendChild(cartSubmitInput);
    document.querySelector('#checkout').addEventListener('click', function (event) {
      document.querySelector('#cart').submit();
    });
  });
  let timeout = '';
  function getSectionsToRender() {
    return [
      {
        id: 'CartDrawer',
        section: 'cart-drawer',
        selector: '.drawer__inner',
      },
    ];
  }

  function eventListerners() {
    document.querySelectorAll('.quantity__button').forEach((btn) => {
      btn.addEventListener('click', (e) => {
        updateQuantity(e, 'UPDATE_QUANTITY');
      });
    });

    document.querySelectorAll('.delete-item').forEach((btn) => {
      btn.addEventListener('click', (e) => {
        updateQuantity(e, 'DELETE_QUANTITY');
      });
    });

    document.querySelectorAll('.property-input').forEach((btn) => {
      btn.addEventListener('input', peropertyUpdate);
    });
  }

  function peropertyUpdate(e) {
    let lineIndex = e.target.dataset.key;
    const quantInput = document.querySelector(`.quantity__input[data-key="${lineIndex}"]`);
    const row = quantInput.closest('.cart-item-row');
    let propertyObj = {};
    propertyObj[e.target.name] = e.target.value;

    const body = JSON.stringify({
      line: lineIndex,
      quantity: quantInput.value,
      properties: propertyObj,
      sections: getSectionsToRender().map((section) => section.section),
      sections_url: window.location.pathname,
    });
    console.log('timeout', timeout);
    if (timeout != '') clearTimeout(timeout);
    timeout = setTimeout(() => {
      updateCart(body, lineIndex, 'UPDATE_PROPERTY');
    }, 1000);
  }

  function updateQuantity(e, action) {
    e.preventDefault();
    let lineIndex = e.currentTarget.dataset.key;
    const quantInput = document.querySelector(`.quantity__input[data-key="${lineIndex}"]`);
    const row = quantInput.closest('.cart-item-row');
    if (action == 'UPDATE_QUANTITY') {
      row.querySelector('.loader').classList.add('d-block');
      row.querySelector('.total-price').classList.add('d-none');
    }

    let updatedQuantity = quantInput.value;

    if (action == 'DELETE_QUANTITY') updatedQuantity = 0;
    else {
      if (e.currentTarget.name == 'plus') {
        updatedQuantity = +updatedQuantity + +quantInput.step;
      } else {
        updatedQuantity = +updatedQuantity - +quantInput.step;
      }
    }
    const body = JSON.stringify({
      line: lineIndex,
      quantity: updatedQuantity,
      sections: getSectionsToRender().map((section) => section.section),
      sections_url: window.location.pathname,
    });

    updateCart(body, lineIndex, action);
  }

  function updateCart(body, lineIndex, action) {
    const quantInput = document.querySelector(`.quantity__input[data-key="${lineIndex}"]`);
    const row = quantInput.closest('.cart-item-row');
    fetch(`${routes.cart_change_url}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Accept: 'application/json',
        cache: 'no-store',
      },
      ...{ body },
    })
      .then((res) => res.text())
      .then((res) => {
        const parsedState = JSON.parse(res);
        const sectionId = document.getElementById('cart-items').dataset.id;
        let html = parsedState.sections['cart-drawer'];
        const parser = new DOMParser();
        const htmlDoc = parser.parseFromString(html, 'text/html');
        let sectionNode = htmlDoc.querySelector('#cart-items-list');
        let priceNode = htmlDoc.querySelector('#footer_total_price');
        if (parsedState.items.length > 0) {
          document.getElementById('cart-items').innerHTML = sectionNode.outerHTML;
          document.getElementById('footer_total_price_wrapper').innerHTML = priceNode.outerHTML;
        } else {
          let cartDrawer = htmlDoc.querySelector('#CartDrawerContainer');
          document.getElementById('CartDrawerSection').innerHTML = cartDrawer.outerHTML;
          console.log('length 0');
        }

        if (action == 'UPDATE_QUANTITY') {
          row.querySelector('.loader').classList.remove('d-block');
          row.querySelector('.total-price').classList.remove('d-none');
        }
        setTimeout(() => {
          eventListerners();
        }, 100);
      })
      .catch((err) => {
        if (action == 'UPDATE_QUANTITY') {
          row.querySelector('.loader').classList.remove('d-block');
          row.querySelector('.total-price').classList.remove('d-none');
        }

        alert(`Error: ${err}`);
        console.log('err', err);
      });
  }

  eventListerners();
</script>
